import pandas as pd
import re
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Sample Dataset
data = {
    'text': [
        "Donald Trump wins US elections!",
        "COVID-19 vaccines have microchips, says fake report",
        "NASA discovers new planet in our solar system",
        "You can lose weight by just sleeping, claims blog",
        "Scientists find water on Mars",
        "WHO declares COVID-19 pandemic officially over",
        "Aliens landed in California, fake news spreads",
        "Electric cars will replace petrol cars by 2030",
        "Drinking bleach cures coronavirus, false claim goes viral",
        "India launches Chandrayaan-3 successfully"
    ],
    'label': [1, 0, 1, 0, 1, 1, 0, 1, 0, 1]  # 1 = Real, 0 = Fake
}

df = pd.DataFrame(data)

# Clean Text
def clean_text(text):
    text = re.sub(r'[^a-zA-Z]', ' ', text)
    return text.lower()

df['clean_text'] = df['text'].apply(clean_text)

# Train-Test Split
X = df['clean_text']
y = df['label']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y)

# TF-IDF Vectorization
vectorizer = TfidfVectorizer(max_features=5000, stop_words='english')
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Model Training
model = LogisticRegression()
model.fit(X_train_tfidf, y_train)

# Predictions
y_pred = model.predict(X_test_tfidf)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred, zero_division=1))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))

def predict_news(news_text):
    cleaned = clean_text(news_text)
    vectorized = vectorizer.transform([cleaned])
    return "Real News" if model.predict(vectorized)[0] == 1 else "Fake News"

print(predict_news("Breaking: Scientists discover a cure for cancer!"))
